{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/employee-dashboard/EmployeeModel.ts","webpack:///./src/app/employee-dashboard/employee-dashboard.component.css","webpack:///./src/app/employee-dashboard/employee-dashboard.component.html","webpack:///./src/app/employee-dashboard/employee-dashboard.component.ts","webpack:///./src/app/shared/api.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h3>I Love Me</h3>\\n<app-employee-dashboard></app-employee-dashboard>\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'web-two';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { EmployeeDashboardComponent } from './employee-dashboard/employee-dashboard.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ApiService } from './shared/api.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EmployeeDashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [ApiService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class EmployeeModel {\r\n  firstName: any;\r\n  lastName: any;\r\n  email: any;\r\n  phone: any;\r\n  salary: any;\r\n  mobile: any;\r\n  mobi: any;\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVlLWRhc2hib2FyZC9lbXBsb3llZS1kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<nav class=\\\"navbar navbar-light bg-primary\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <h1 style=\\\"color: aliceblue;\\\">Angular Crud</h1>\\n    <div class=\\\"d-flex\\\">\\n      <button type=\\\"button\\\" data-bs-toggle=\\\"modal\\\" data-bs-target=\\\"#exampleModal\\\" class=\\\"btn btn-success\\\">Add Employee</button>\\n    </div>\\n    </div>\\n</nav>\\n<table class=\\\"table mt-3\\\">\\n  <thead>\\n    <tr>\\n      <th scope=\\\"col\\\">Employee ID</th>\\n      <th scope=\\\"col\\\">First Name</th>\\n      <th scope=\\\"col\\\">Last Name</th>\\n      <th scope=\\\"col\\\">Email ID</th>\\n      <th scope=\\\"col\\\">Phone Number</th>\\n      <th scope=\\\"col\\\">Salary</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr>\\n    <td>1</td>\\n    <td>Manikandan</td>\\n    <td>Duraikannu</td>\\n    <td>manikandan@gmail.com</td>\\n    <td>8015723171</td>\\n    <td>15000</td>\\n    <td><button class=\\\"btn btn-info\\\">Edit</button>\\n    <button class=\\\"btn btn-danger mx-3\\\">Delete</button>\\n  </td>\\n    </tr>\\n</tbody>\\n</table>\\n\\n<!-- Button trigger modal -->\\n\\n\\n<!-- Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"exampleModal\\\" tabindex=\\\"-1\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Modal title</h5>\\n        <button type=\\\"button\\\" class=\\\"btn-close\\\" data-bs-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"></button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"formValue\\\">\\n          \\n          <div class=\\\"mb-3\\\">\\n            <label for=\\\"exampleInputPassword1\\\" class=\\\"form-label\\\">First Name</label>\\n            <input type=\\\"text\\\"  formControlName=\\\"firstName\\\" class=\\\"form-control\\\" id=\\\"firstName\\\">\\n          </div>\\n          <div class=\\\"mb-3\\\">\\n            <label for=\\\"exampleInputPassword1\\\" class=\\\"form-label\\\">Last Name</label>\\n            <input type=\\\"text\\\"  formControlName=\\\"lastName\\\" class=\\\"form-control\\\"  id=\\\"lastName\\\">\\n          </div>\\n          <div class=\\\"mb-3\\\">\\n            <label for=\\\"exampleInputPassword1\\\" class=\\\"form-label\\\">Email ID</label>\\n            <input type=\\\"email\\\"  formControlName=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\">\\n          </div>\\n          <div class=\\\"mb-3\\\">\\n            <label for=\\\"exampleInputPassword1\\\" class=\\\"form-label\\\">Phone </label>\\n            <input type=\\\"text\\\"  formControlName=\\\"phone\\\" class=\\\"form-control\\\"  id=\\\"phone\\\">\\n          </div>\\n          <div class=\\\"mb-3\\\">\\n            <label for=\\\"exampleInputPassword1\\\" class=\\\"form-label\\\">Salary</label>\\n            <input type=\\\"text\\\"  formControlName=\\\"salary\\\" class=\\\"form-control\\\"  id=\\\"salary\\\">\\n          </div>\\n          \\n        </form>      \\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" id=\\\"cancel\\\" class=\\\"btn btn-secondary\\\" data-bs-dismiss=\\\"modal\\\">Close</button>\\n        <button type=\\\"button\\\" (click)=\\\"postEmployeDetails()\\\" class=\\\"btn btn-primary\\\">Add</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup,FormBuilder } from '@angular/forms';\nimport { ApiService } from '../shared/api.service';\nimport { EmployeeModel } from './EmployeeModel';\n\n@Component({\n  selector: 'app-employee-dashboard',\n  templateUrl: './employee-dashboard.component.html',\n  styleUrls: ['./employee-dashboard.component.css'],\n  \n})\nexport class EmployeeDashboardComponent implements OnInit {\n\n  formValue !: FormGroup;\n  employeemodelObj: EmployeeModel = new EmployeeModel();\n  employeeData !: any;\n  constructor(private formbuilder: FormBuilder, private api : ApiService ) { }\n\n  ngOnInit(): void{\n\n    this.formValue= this.formbuilder.group({\n\n      firstName : [''],\n      lastName : [''],\n      email : [''],\n      phone : [''],\n      salary : ['']\n\n    })\n  }\n\n  postEmployeDetails(): void {\n    this.employeemodelObj.firstName = this.formValue.value.firstName\n    this.employeemodelObj.lastName = this.formValue.value.lastName\n    this.employeemodelObj.email = this.formValue.value.email\n    this.employeemodelObj.phone = this.formValue.value.phone\n    this.employeemodelObj.salary = this.formValue.value.salary\n\n    this.api.postEmploye(this.employeemodelObj)\n    .subscribe(res=>{\n      console.log (res);\n      alert(\"Employee Added Successfully\")\n    },\n    err=>{\n      alert(\"Something Went wrong\")\n    })\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpClientModule,} from '@angular/common/http';\nimport {map} from 'rxjs/Operators'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private http : HttpClient) { }\n\n  postEmploye(data : any){\n    return this.http.post<any>(\"http://localhost:3000/posts\", data)\n    .pipe(map((res:any)=>{\n      return res;\n    }))\n  }\n\n  getEmploye(): any{\n    return this.http.get<any>(\"http://localhost:3000/posts\",)\n    .pipe(map((res:any)=>{\n      return res;\n    }))\n  }\n\n  updateEmploye(data: any, id: number){\n    return this.http.put<any>(\"http://localhost:3000/posts/\"+id,data)\n    .pipe(map((res:any)=>{\n      return res;\n    }))\n  }\n  \n  \n  deleteEmploye(): any{\n    return this.http.delete<any>(\"http://localhost:3000/posts\",)\n    .pipe(map((res:any)=>{\n      return res;\n    }))\n  }\n  \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}